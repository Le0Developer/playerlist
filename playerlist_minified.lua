local e="LeoDeveloper"local t="1.2.0"local a=""for K=1,16 do local Q=math.random(1,16)a=a.. ("0123456789abcdef"):sub(Q,Q)end local o={}local i={}local n={}local s={}local h=gui.Reference("Menu")local r=300 local d=gui.Tab(gui.Reference("Misc"),"playerlist","Player List")local l do local K=gui.Window("playerlist","Player List",100,100,530,600)K:SetActive(false)l=K end local u={x=8,y=8,w=618,h=108}local c=gui.Groupbox(d,"Menu Controller",u.x,u.y,u.w,u.h)local m do local K=gui.Combobox(c,"controller.mode","Menu Mode","Tab","Window")K:SetWidth(200)m=K end local f do local K=gui.Keybox(c,"controller.openkey","Window Openkey",0)K:SetWidth(200)K:SetPosX(210)K:SetPosY(0)K:SetDisabled(true)f=K end local w=nil local y={x=u.x,y=u.y+u.h,w=r,h=0}local p=gui.Groupbox(d,"Select a player",y.x,y.y,y.w,y.h)local v=gui.Listbox(p,tostring(a)..".players",440)local b do local K=gui.Button(p,"Clear",function()w=nil v:SetOptions()s={}n={}end)K:SetPosX(188)K:SetPosY(-42)K:SetWidth(80)b=K end local g={x=y.x+y.w+4,y=y.y,w=618-r,h=0}local k=gui.Groupbox(d,"Per Player Settings",g.x,g.y,g.w,g.h)local q q=function(K)return{set=function(Q,J)K.settings[Q]=J if#n>0 and n[v:GetValue()+1]==K.info.uid then return i[Q].set(J)end end,get=function(Q)return K.settings[Q]end}end local j j=function(K,Q)local J={}local X={obj=K}X.reapply=function(K)X.obj=K for Z,ee in pairs(J)do X[Z](K,unpack(ee))end end setmetatable(X,{__index=function(Z,ee)if ee:sub(1,3)=="Set"then return function(Z,...)J[ee]={...}return X.obj[ee](X.obj,...)end end return X.obj[ee]end})return X end plist={gui={Checkbox=function(K,Q,J)local X=gui.Checkbox(k,tostring(a)..".settings."..tostring(K),Q,J)local Z=j(X)i[K]={set=function(ee)return X:SetValue(ee)end,get=function()return X:GetValue()end,default=J,obj=X}for ee,et in pairs(s)do et.settings[K]=J end table.insert(o,{obj=X,recreate=function()X=gui.Checkbox(k,tostring(a)..".settings."..tostring(K),Q,J)Z.reapply(X)return X end})return Z end,Slider=function(K,Q,J,X,Z,ee)local et=gui.Slider(k,tostring(a)..".settings."..tostring(K),Q,J,X,Z,ee or 1)local ea=j(et)i[K]={set=function(eo)return et:SetValue(eo)end,get=function()return et:GetValue()end,default=J,obj=et}for eo,ei in pairs(s)do ei.settings[K]=J end table.insert(o,{obj=et,recreate=function()et=gui.Slider(k,tostring(a)..".settings."..tostring(K),Q,J,X,Z,ee or 1)ea.reapply(et)return et end})return ea end,ColorPicker=function(K,Q,J,X,Z,ee)local et=gui.ColorPicker(k,tostring(a)..".settings."..tostring(K),J,X,Z,ee)local ea=j(et)i[K]={set=function(eo)return et:SetValue(unpack(eo))end,get=function()return{et:GetValue()}end,default={J,X,Z,ee},obj=et}for eo,ei in pairs(s)do ei.settings[K]={J,X,Z,ee}end table.insert(o,{obj=et,recreate=function()et=gui.ColorPicker(k,tostring(a)..".settings."..tostring(K),J,X,Z,ee)ea.reapply(et)return et end})return ea end,Text=function(K,Q)local J=gui.Text(k,Q)local X=j(J)local Z=Q i[K]={set=function(ee)J:SetText(ee)Z=ee end,get=function()return Z end,default=Q,obj=J}for ee,et in pairs(s)do et.settings[K]=Q end table.insert(o,{obj=J,recreate=function()J=gui.Text(k,Q)X.reapply(J)return J end})return X end,Combobox=function(K,Q,...)local J=gui.Combobox(k,tostring(a)..".settings."..tostring(K),Q,...)local X=j(J)i[K]={set=function(ee)return J:SetValue(ee)end,get=function()return J:GetValue()end,default=0,obj=J}for ee,et in pairs(s)do et.settings[K]=0 end local Z={...}table.insert(o,{obj=J,recreate=function()J=gui.Combobox(k,tostring(a)..".settings."..tostring(K),Q,unpack(Z))X.reapply(J)return J end})return X end,Button=function(K,Q)local J J=function()if#n>0 then Q(n[v:GetValue()+1])else Q()end end local X=gui.Button(k,K,J)local Z=j(X)table.insert(o,{obj=X,recreate=function()X=gui.Button(k,K,J)Z.reapply(X)return X end})return Z end,Editbox=function(K,Q)local J=gui.Editbox(k,K,Q)local X=j(J)i[K]={set=function(Z)return J:SetValue(Z)end,get=function()return J:GetValue()end,default=0,obj=J}for Z,ee in pairs(s)do ee.settings[K]=0 end table.insert(o,{obj=J,recreate=function()J=gui.Editbox(k,K,Q)X.reapply(J)return J end})return X end,Multibox=function(K)local Q=gui.Multibox(k,K)local J=j(Q)table.insert(o,{obj=Q,recreate=function()Q=gui.Multibox(k,K)J.reapply(Q)return Q end})return J end,Multibox_Checkbox=function(K,Q,J,X)local Z=gui.Checkbox(K.obj,tostring(a)..".settings."..tostring(Q),J,X)local ee=j(Z)i[Q]={set=function(et)return Z:SetValue(et)end,get=function()return Z:GetValue()end,default=X,obj=Z}for et,ea in pairs(s)do ea.settings[Q]=X end table.insert(o,{obj=Z,recreate=function()Z=gui.Checkbox(K.obj,tostring(a)..".settings."..tostring(Q),J,X)ee.reapply(Z)return Z end})return ee end,Multibox_ColorPicker=function(K,Q,J,X,Z,ee,et)local ea=gui.ColorPicker(K.obj,Q,X,Z,ee,et)local eo=j(ea)i[Q]={set=function(ei)return ea:SetValue(unpack(ei))end,get=function()return{ea:GetValue()}end,default={X,Z,ee,et},obj=ea}for ei,en in pairs(s)do en.settings[Q]={X,Z,ee,et}end table.insert(o,{obj=ea,recreate=function()ea=gui.ColorPicker(K.obj,tostring(a)..".settings."..tostring(Q),X,Z,ee,et)eo.reapply(ea)return ea end})return eo end,Remove=function(K)K:Remove()for Q,J in pairs(i)do if J.obj==K then i[Q]=nil for X,Z in pairs(s)do Z.settings[Q]=nil end break end end end},GetByUserID=function(K)return q(s[K])end,GetByIndex=function(K)local Q=client.GetPlayerInfo(K)if Q~=nil then return q(s[Q["UserID"]])end for J,X in pairs(s)do if X.info.index==K then return q(X)end end end,GetSelected=function()if#n>0 then q(s[n[v:GetValue()+1]])end return nil end,GetSelectedIndex=function()if#n>0 then local K=s[n[v:GetValue()+1]].info.index end return nil end,GetSelectedUserID=function()if#n>0 then local K=n[v:GetValue()+1]end return nil end}local x=0 local z=0 callbacks.Register("Draw","playerlist.callbacks.Draw",function()if f:GetValue()==0 and m:GetValue()==1 then l:SetActive(h:IsActive())end if not h:IsActive()and(m:GetValue()==0 or(not l:IsActive()or m:GetValue()~=0))then return end if f:GetValue()~=z and m:GetValue()==1 then z=f:GetValue()l:SetOpenKey(z)end if m:GetValue()~=x then if m:GetValue()==0 then p:Remove()v:Remove()b:Remove()p=gui.Groupbox(d,"Select a player",y.x,y.y,y.w,y.h)v=gui.Listbox(p,tostring(a)..".players",440)do local K=gui.Button(p,"Clear",function()w=nil v:SetOptions()s={}n={}end)K:SetPosX(188)K:SetPosY(-42)K:SetWidth(80)b=K end k:Remove()k=gui.Groupbox(d,"Per Player Settings",g.x,g.y,g.w,g.h)for K=1,#o do o[K].obj:Remove()o[K].obj=o[K].recreate(k)end f:SetDisabled(true)l:SetActive(false)else p:Remove()v:Remove()b:Remove()p=gui.Groupbox(l,"Select a player",8,8,188,584)v=gui.Listbox(p,tostring(a)..".players",494)do local K=gui.Button(p,"Clear",function()w=nil v:SetOptions()s={}n={}end)K:SetPosX(84)K:SetPosY(-42)K:SetWidth(80)b=K end k:Remove()k=gui.Groupbox(l,"Per Player Settings",200,8,318,584)for K=1,#o do o[K].obj:Remove()o[K].obj=o[K].recreate(k)end f:SetDisabled(false)end x=m:GetValue()w=nil v:SetOptions(unpack((function()local K={}local Q=1 for J,X in ipairs(n)do K[Q]=s[X].info.nickname Q=Q+1 end return K end)()))end if#n==0 then for K=1,#o do local Q=o[K]Q.obj:SetDisabled(true)end w=nil return elseif w==nil then for K=1,#o do local Q=o[K]Q.obj:SetDisabled(false)end end if w~=v:GetValue()then w=v:GetValue()local K=s[n[v:GetValue()+1]].settings for Q,J in pairs(i)do J.set(K[Q])end else local K=s[n[v:GetValue()+1]].settings for Q,J in pairs(i)do K[Q]=J.get()end end end)local _=nil local E=nil callbacks.Register("CreateMove","playerlist.callbacks.CreateMove",function(K)if engine.GetMapName()~=_ or engine.GetServerIP()~=E then _=engine.GetMapName()E=engine.GetServerIP()w=nil v:SetOptions()s={}n={}end local Q=entities.FindByClass("CCSPlayer")for J=1,#Q do local X=Q[J]local Z=client.GetPlayerInfo(X:GetIndex())["UserID"]if s[Z]==nil then table.insert(n,Z)s[Z]={info={nickname=X:GetName(),uid=Z,index=X:GetIndex()},settings={}}local ee=s[Z].settings for et,ea in pairs(i)do ee[et]=ea.default end v:SetOptions(unpack((function()local et={}local ea=1 for eo,ei in ipairs(n)do et[ea]=s[ei].info.nickname ea=ea+1 end return et end)()))elseif s[Z].info.nickname~=X:GetName()then s[Z].info.nickname=X:GetName()v:SetOptions(unpack((function()local ee={}local et=1 for ea,eo in ipairs(n)do ee[et]=s[eo].info.nickname et=et+1 end return ee end)()))end end end)http.Get("https://raw.githubusercontent.com/Le0Developer/playerlist/master/version",function(K)if not K then return end if K==t then return end local Q=180 local J=gui.Groupbox(d,"Update Available",u.x,u.y+u.h,618,Q)local X=gui.Text(J,"Current version: "..tostring(t).."\nLatest version: "..tostring(K))local Z=gui.Checkbox(J,"updater.minified","Download minified version",true)local ee do local et=gui.Button(J,"Update",function()X:SetText("Updating...")ee:SetDisabled(true)http.Get(((function()if Z:GetValue()then return"https://raw.githubusercontent.com/Le0Developer/playerlist/master/playerlist_minified.lua"else return"https://raw.githubusercontent.com/Le0Developer/playerlist/master/playerlist.lua"end end)()),function(ea)if ea then X:SetText("Saving...")do local eo=file.Open(GetScriptName(),"w")eo:Write(ea)eo:Close()end return X:SetText("Updated to version: "..tostring(K)..".\nReload `"..tostring(GetScriptName()).."` for changes to take effect.")else X:SetText("Failed.")return ee:SetDisabled(false)end end)end)et:SetWidth(290)ee=et end do local et=gui.Button(J,"Open Changelog in Browser",function()return panorama.RunScript("SteamOverlayAPI.OpenExternalBrowserURL( 'https://github.com/Le0Developer/playerlist/blob/master/changelog.md' );")end)et:SetWidth(290)et:SetPosX(300)et:SetPosY(78)end y.y=y.y+Q p:SetPosY(y.y)g.y=g.y+Q if m:GetValue()==0 then return k:SetPosY(g.y)end end)do local K=plist.gui.Combobox("resolver.type","Resolver","On","Off","Manual (LBY Override)")K:SetDescription("Choose a resolver for this player.")end do local K=plist.gui.Slider("resolver.lby_override","LBY Override Value",0,-58,58)K:SetDescription("The LBY value for resolving when using manual resolver.")end callbacks.Register("AimbotTarget","playerlist.extensions.Resolver.AimbotTarget",function(K)if not K:GetIndex()then return end local Q=plist.GetByIndex(K:GetIndex())if Q.get("resolver.type")==0 then return gui.SetValue("rbot.accuracy.posadj.resolver",true)else return gui.SetValue("rbot.accuracy.posadj.resolver",false)end end)callbacks.Register("CreateMove","playerlist.extensions.Resolver.CreateMove",function(K)local Q=entities.FindByClass("CCSPlayer")for J=1,#Q do local X=false repeat local Z=Q[J]if not Z:IsAlive()then X=true break end local ee=plist.GetByIndex(Z:GetIndex())if ee.get("resolver.type")==2 then Z:SetProp("m_flLowerBodyYawTarget",(Z:GetProp("m_angEyeAngles").y+ee.get("resolver.lby_override")+180)%360-180)end X=true until true if not X then break end end end)local T=nil local A=false callbacks.Register("AimbotTarget","playerlist.extensions.Priority.AimbotTarget",function(K)if not K:GetIndex()then return end if T and K:GetIndex()~=T:GetIndex()then if A then gui.SetValue("rbot.aim.target.lock",false)end T=K A=false elseif A then return gui.SetValue("rbot.aim.target.fov",180)end end)do local K=plist.gui.Combobox("targetmode","Targetmode","Normal","Friendly","Priority")K:SetDescription("Mode for targetting. NOTE: Priority on teammates attack them.")end local O=3 local I={}callbacks.Register("CreateMove","playerlist.extensions.Priority.CreateMove",function(K)local Q=entities.GetLocalPlayer()local J=entities.FindByClass("CCSPlayer")for X=1,#J do local Z=false repeat local ee=J[X]if not ee:IsAlive()then Z=true break end local et=plist.GetByIndex(ee:GetIndex())local ea=client.GetPlayerInfo(ee:GetIndex())["UserID"]if et.get("targetmode")==0 and I[ea]then ee:SetProp("m_iTeamNum",ee:GetProp("m_iPendingTeamNum"))I[ea]=nil elseif et.get("targetmode")==1 then ee:SetProp("m_iTeamNum",Q:GetTeamNumber())I[ea]=true elseif et.get("targetmode")==2 then if ee:GetProp("m_iPendingTeamNum")==Q:GetTeamNumber()then ee:SetProp("m_iTeamNum",(Q:GetTeamNumber()-1)%2+2)I[ea]=true else if I[ea]then ee:SetProp("m_iTeamNum",ee:GetProp("m_iPendingTeamNum"))I[ea]=nil end if not A and ee:GetTeamNumber()~=Q:GetTeamNumber()then local eo=Q:GetAbsOrigin()+Q:GetPropVector("localdata","m_vecViewOffset[0]")local ei=ee:GetHitboxPosition(5)engine.SetViewAngles((ei-eo):Angles())gui.SetValue("rbot.aim.target.fov",O)gui.SetValue("rbot.aim.target.lock",true)T=ee A=true end end end Z=true until true if not Z then break end end end)callbacks.Register("FireGameEvent","playerlist.extensions.Priority.FireGameEvent",function(K)if K:GetName()=="player_death"and A then if client.GetPlayerIndexByUserID(K:GetInt("userid"))==T:GetIndex()then A=false T=nil gui.SetValue("rbot.aim.target.fov",180)return gui.SetValue("rbot.aim.target.lock",false)end end end)local N=plist.gui.Multibox("Force ...")do local K=plist.gui.Multibox_Checkbox(N,"force.baim","BAIM",false)K:SetDescription("Sets bodyaim to priority.")end do local K=plist.gui.Multibox_Checkbox(N,"force.safepoint","Safepoint",false)K:SetDescription("Shoots only on safepoint.")end local S={"asniper","hpistol","lmg","pistol","rifle","scout","shared","shotgun","smg","sniper","zeus"}local H={applied=false}local R R=function()if H.applied then print("[PLAYERLIST] WARNING: Force baim has already been applied.")end for K=1,#S do local Q=S[K]if gui.GetValue("rbot.hitscan.mode."..tostring(Q)..".bodyaim")~=1 then H[Q]=gui.GetValue("rbot.hitscan.mode."..tostring(Q)..".bodyaim")gui.SetValue("rbot.hitscan.mode."..tostring(Q)..".bodyaim",1)end end H.applied=true end local D D=function()if not H.applied then print("[PLAYERLIST] WARNING: Force baim hasn't been applied.")end for K,Q in pairs(H)do local J=false repeat if K=="applied"then J=true break end gui.SetValue("rbot.hitscan.mode."..tostring(K)..".bodyaim",Q)J=true until true if not J then break end end H={applied=false}end local L={applied=false}local U={"delayshot","delayshotbody","delayshotlimbs"}local C C=function()if L.applied then print("[PLAYERLIST] WARNING: Force safepoint has already been applied.")end for K=1,#S do local Q=S[K]for J=1,#U do local X=U[J]if gui.GetValue("rbot.hitscan.mode."..tostring(Q).."."..tostring(X))~=1 then L[tostring(Q).."."..tostring(X)]=gui.GetValue("rbot.hitscan.mode."..tostring(Q).."."..tostring(X))gui.SetValue("rbot.hitscan.mode."..tostring(Q).."."..tostring(X),1)end end end L.applied=true end local M M=function()if not L.applied then print("[PLAYERLIST] WARNING: Force safepoint hasn't been applied.")end for K,Q in pairs(L)do local J=false repeat if K=="applied"then J=true break end gui.SetValue("rbot.hitscan.mode."..tostring(K),Q)J=true until true if not J then break end end L={applied=false}end local F=nil callbacks.Register("AimbotTarget","playerlist.extensions.FBSP.AimbotTarget",function(K)if not K:GetIndex()then return end F=K local Q=plist.GetByIndex(K:GetIndex())if Q.get("force.baim")then if not H.applied then R()end elseif H.applied then D()end if Q.get("force.safepoint")then if not L.applied then return C()end elseif L.applied then return M()end end)callbacks.Register("FireGameEvent","playerlist.extensions.FBSP.FireGameEvent",function(K)if K:GetName()=="player_death"and F and client.GetPlayerIndexByUserID(K:GetInt("userid"))==F:GetIndex()then F=nil if H.applied then D()end if L.applied then return M()end end end)local W=plist.gui.Multibox("ESP Options")local Y do local K=plist.gui.Multibox_Checkbox(W,"esp.box","Box",false)K:SetDescription("Draw box around entity.")Y=K end plist.gui.Multibox_ColorPicker(Y,"esp.box.clr","Box Color",0xFF,0x00,0x00,0xFF)local P do local K=plist.gui.Multibox_Checkbox(W,"esp.chams","Chams",false)K:SetDescription("Draw chams onto the model. Colors are: visible / invisible")P=K end plist.gui.Multibox_ColorPicker(P,"esp.chams.invclr","Invisible Color",0xFF,0xFF,0x00,0xFF)plist.gui.Multibox_ColorPicker(P,"esp.chams.visclr","Visible Color",0x00,0xFF,0x00,0xFF)do local K=plist.gui.Multibox_Checkbox(W,"esp.name","Name",false)K:SetDescription("Draw entity name.")end do local K=plist.gui.Multibox_Checkbox(W,"esp.healthbar","Healthbar",false)K:SetDescription("Draw entity healthbar.")end do local K=plist.gui.Multibox_Checkbox(W,"esp.ammo","Ammo",false)K:SetDescription("Draw amount of money left in weapon.")end local V={weapon_glock=20,weapon_usp_silencer=12,weapon_hkp2000=13,weapon_revolver=8,weapon_cz75a=12,weapon_deagle=7,weapon_elite=30,weapon_fiveseven=20,weapon_p250=13,weapon_tec9=18,weapon_mac10=30,weapon_mp7=30,weapon_mp9=30,weapon_mp5sd=30,weapon_bizon=64,weapon_p90=50,weapon_ump45=25,weapon_mag7=5,weapon_nova=8,weapon_sawedoff=8,weapon_xn1014=7,weapon_m249=100,weapon_negev=150,weapon_ak47=30,weapon_aug=30,weapon_famas=25,weapon_galilar=35,weapon_m4a1_silencer=25,weapon_m4a1=30,weapon_sg556=30,weapon_ssg08=10,weapon_scar20=20,weapon_gs3sg1=20,weapon_awp=10}callbacks.Register("DrawESP","playerlist.extensions.PPE.DrawESP",function(K)local Q=K:GetEntity()if not Q:IsPlayer()then return end local J=plist.GetByIndex(Q:GetIndex())if J.get("esp.box")then draw.Color(unpack(J.get("esp.box.clr")))draw.OutlinedRect(K:GetRect())end if J.get("esp.name")then K:AddTextTop(Q:GetName())end if J.get("esp.healthbar")then K:AddBarLeft(Q:GetHealth()/100,Q:GetHealth())end if J.get("esp.ammo")then local X=Q:GetPropEntity("m_hActiveWeapon")if X then local Z=X:GetProp("m_iClip1")if Z>=0 then if V[tostring(X)]==nil then print("[Player List] [WARNING] Unknow weapon: "..tostring(X))V[tostring(X)]=Z end return K:AddBarBottom(Z/V[tostring(X)],Z)end end end end)local B={}local G G=function(K,Q)if B[K]then return B[K]end local J=([[        "VertexLitGeneric" {
        "$basetexture" "vgui/white_additive"
        "$color" "[%s %s %s]"
        "$alpha" "%s"
        "$ignorez" "%s"
    }]]):format(K[1]/255,K[2]/255,K[3]/255,K[4]/255,Q)B[K]=materials.Create("Chams",J)return B[K]end callbacks.Register("DrawModel","playerlist.extensions.PPE.DrawModel",function(K)local Q=K:GetEntity()if not Q or not Q:IsPlayer()then return end local J=plist.GetByIndex(Q:GetIndex())if J.get("esp.chams")then if J.get("esp.chams.invclr")[4]>0 then K:ForcedMaterialOverride(G(J.get("esp.chams.invclr"),1))K:DrawExtraPass()end if J.get("esp.chams.visclr")[4]>0 then return K:ForcedMaterialOverride(G(J.get("esp.chams.visclr"),0))end end end)